##  User Paramaters
##  BED_TEMP      : Target temperature for the Bed. Is also used to decide if heatsoak is needed
##  EXTRUDER_TEMP : Target temperature for the Extruder
##  CHAMBER_TEMP  : Target temperature for the chamber fan controll
##  SOAK          : Soak time in minutes
##  DELTA_B       : Allowed delta between actual bed temperature and target temperature for the decision if heat soak is needed.
##  DELTA_C       : Allowed delta between actual chamber temperature and target will wait until target reached or time is zero
##  CHAMBER_SOAK  : Extra Soak time if Chamber is not on target - DELTA_C
##  EXTRA_SOAK    : Enables Chamber Soak ('true'/'false')
##  LAYER_HEIGHT  : Hight of prime_line should be set to layer_hight
##  Z_ADJUST      : Add extra z offset via slicer
##  FILTER        : Activate Nevermore 1 On 0 Off default On
[gcode_macro PRINT_START]
description: All cmd needed at print start
variable_var:
{
	'temp':
	{
		'extruder': 	210.0,
		'bed': 			60.0, 
		'chamber': 		40.0,
		'endstop': 		0.0
	},
    'delta':
	{
		'chamber': 		5.0,
		'bed': 			10
	},
    'time':
	{
		'soak': 		1800,
		'soak_extra': 	900
	},
    'redo_qgl':			True,
    'prime_height': 	0.0,
    'z_adjust': 		0.0,
    'filter': 			True
}
## Valid state 
##   Prepare    : Store Params
##   HeatBed    : Heat up bed and decide if soak is needed 
##   HeatSoak   : Loop the time specified with SOAK
##   Chamber    : Decide if extra soak is needed
##   ChamberSoak: Loop the time specified with EXTRA_SOAK or Chamber target reached
##   Final      : All what needs to be done after wait time
variable_state: 'Prepare'
gcode:
	{% set user   = printer['gcode_macro _USER_VARIABLE'] %}
	{% set actBed = printer['temperature_sensor bed'].temperature|float|round(1) if 'temperature_sensor bed' in printer else printer.heater_bed.temperature|float|round(1) %} ; get actual temp from extra sensor or heater sensor
	##############################  Prepare phase only done at the first exection of PRINT_START  ##############################
	{% if state == 'Prepare' %}
		#############  Store input parameters  #############
		{% set var = {
			'temp':
			{
				'extruder': params.EXTRUDER_TEMP|default(210)|float|round(1),
				'bed'     : params.BED_TEMP|default(60)|float|round(1),
				'chamber' : params.CHAMBER_TEMP|default(50)|float|round(1),
				'endstop' : 0.0
			},
			'delta':
			{
				'chamber': params.DELTA_C|default(5)|float|round(1), 
				'bed'    : params.DELTA_B|default(10)|float|round(1)},
				'time' :
				{
					'soak'      : params.SOAK|default(30)|int * 60,
					'soak_extra': params.CHAMBER_SOAK|default(15)|int * 60 if params.EXTRA_SOAK|default('true') == 'true' and user.hw.chamber.enabled else 0
				},
				'redo_qgl'    : True,
				'prime_height': params.LAYER_HEIGHT|float * user.print_start.prime_mult|float if LAYER_HEIGHT in params else user.prime.pos.z|float,
				'z_adjust'    : params.Z_ADJUST|default(0.0)|float,
				'filter'      : False if params.FILTER|default(1)|int == 0 else True
			}
		%}
		{% if user.hw.relay.enabled %}
			_HEATER_ON																; switch safety relay on
		{% endif %}
		{% if user.hw.caselight.enabled %}
			_CASELIGHT_ON															; switch on light
		{% endif %}
		{% if user.hw.display.enabled %}
			_LCD_KNOB COLOR=RED BLINK=1 
		{% endif %}
		{% if user.hw.chamber.fan %} 
			M141 S0																	; exhaust fan off
		{% endif %}
		{% if user.hw.filter.enabled and var.filter %} 
			_FILTER_ON																; activate cancer filter
		{% endif %}
		LAZY_HOME                                                                	; home if needed
		G90                                                                  		; absolute position
		G0 Z{user.park.bed.z} F{user.speed.z_hop}                            		; move nozzle to z high first
		G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}        		; home to get toolhead in the middle
		PAUSE_BASE
		SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=var VALUE="{var}"
		SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE=False
		SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"HeatBed"'
		UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
		##############################  HeatBed Phase heat up the bed  ##############################    
	{% elif state == 'HeatBed' %}
		# Get max allow bed temp from config. Lower it by 5C to avoid shutdown
		{% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|float|round(1) - 5.0 %}
		{% set targetBed = var.temp.bed - var.delta.bed %}
		{% set soakBed = [(var.temp.bed + user.print_start.bed_up), cfg_bed_max]|min %}
		{% if (var.time.soak <= 0) or (actBed >= targetBed) %}  					; check if soak time is 0 or if the bed is still hot
			M117 Heating Extruder
			{% set text = 'heat soak disabled' if var.time.soak <= 0 else 'heat soak not needed' %}
			_PRINT_AR T="{
				"Bed temp: act %3.1f&degC min %3.1f&degC (target(%3.1f&degC) - delta(%2.1f&degC)) %s" % 
				(actBed,targetBed,var.temp.bed,var.delta.bed,text)}"
			{% set _dummy = var.update({'redo_qgl' : False}) %}
			M140 S{var.temp.bed}      												; heat bed
			M109 S{var.temp.extruder} 												; heat extruder and wait
			M190 S{var.temp.bed}      												; heat bed and wait
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Chamber"'
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
		{% else %}
			M117 Heating Bed
			_PRINT_AR T="{
				"Bed temp: act %3.1f&degC min %3.1f&degC (target(%3.1f&degC) - delta(%2.1f&degC)) heat soak needed" % 
				(actBed,targetBed,var.temp.bed,var.delta.bed)}"
			_PRINT_AR T="{
				"Set Bed temp to %3.1f&degC instead of %3.1f&degC for faster heat soak" % 
				(soakBed,var.temp.bed)}"    
			M106 S90              													; switch part cooling ~35% to move air in chamber
			M140 S{soakBed}       													; heat bed
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"HeatSoak"'
			{% set next_duration = user.print_start.ival if var.time.soak > user.print_start.ival else var.time.soak %}
			{% set _dummy = var.time.update({'soak': var.time.soak - user.print_start.ival}) if var.time.soak > user.print_start.ival else var.time.update({'soak': 0}) %}
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
		{% endif%}
		SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=var VALUE="{var}"
		_RUNOUT_INFO    
	##############################  Heatsoak Phase call the delay macro until time is over  ##############################
	{% elif state == 'HeatSoak' %}
		#############  Get filament runout info  #############
		{% if user.hw.runout.sensor %}
			{% if printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled|lower == 'true' %}
				{% set filament_detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected %}
			{% elif 'filament_loaded' in printer.save_variables.variables %}
				{% set filament_detected = printer.save_variables.variables.filament_loaded %}
			{% else %}
				{% set filament_detected = True %}
			{% endif %}
		{% elif user.hw.runout.type == 'file' %}
			{% set filament_detected = printer.save_variables.variables.filament_loaded %}
		{% else %}
			{% set filament_detected = True %}
		{% endif %}
		{% if filament_detected %}
			# check time to start heating extruder
			{% if var.time.soak <= (user.print_start.time.extruder + var.temp.extruder - 240) and var.temp.extruder != printer.extruder.target %}
				M104 S{var.temp.extruder} 											; heat extruder
			{% endif %}
			# check time to reduce bed temp
			{% if var.time.soak <= user.print_start.time.bed and bed != printer.heater_bed.target|int %}  
				M140 S{var.temp.bed} 												; heat bed
			{% endif %}
			{% if var.time.soak > 0 %} 												; check remaining time
				{% set next_duration = var.time.soak if user.print_start.ival >= var.time.soak else user.print_start.ival %}
				{% set _dummy = var.time.update({'soak': 0}) if user.print_start.ival >= var.time.soak 
						   else var.time.update({'soak': var.time.soak - user.print_start.ival}) %}}
				UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
			{% else %}
				SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Chamber"'
				UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
				_PRINT_AR T="{"Bed act temp=%3.1fC heat soak done" % (actBed)}"
			{% endif%}
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=var VALUE="{var}"
		{% else %}
			_PRINT_AR T="No Filament loaded, print aborded!"
			CANCEL_PRINT PARK=1 ERROR=1
		{% endif %}
	##############################  Decide if extended soaking is needed  ##############################
	{% elif state == 'Chamber' %}
		{% set targetChamber = var.temp.chamber - var.delta.chamber %}
		{% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.enabled else 0 %}
		{% if var.time.soak_extra > 0 and actChamber < targetChamber %}
			_PRINT_AR T="{
				"Chamber temp: act %2.1f&degC min %2.1f&degC (target(%2.1f&degC) - delta(%2.1f&degC)) extra heat soak needed" %
				(actChamber, targetChamber, var.temp.chamber, var.delta.chamber)}"
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"ChamberSoak"'
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
		{% else %}
			{% set text = 'extra heat soak disabled' if var.time.soak_extra <= 0 else 'extra heat soak not needed' %}
			_PRINT_AR T="{
				"Chamber temp: act %2.1f&degC min %2.1f&degC (target(%2.1f&degC) - delta(%2.1f&degC)) %s" % 
				(actChamber, targetChamber, var.temp.chamber, var.delta.chamber, text)}"
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Final"'
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5  
		{% endif %}
	############################## Extra Heat Soak terminated by chamber temp  ##############################
	{% elif state == 'ChamberSoak' %}
		{% set targetChamber = var.temp.chamber - var.delta.chamber %}
		{% set actChamber = printer["temperature_" + user.hw.chamber.type + " chamber"].temperature|round(1) if user.hw.chamber.enabled else 0 %}
		{% if var.time.soak_extra > 0 and actChamber < targetChamber %} 			; check remaining time and temp difference
			{% set next_duration = var.time.soak_extra if user.print_start.ival >= var.time.soak_extra else user.print_start.ival %}
			{% set _dummy = var.time.update({'soak_extra': 0}) if user.print_start.ival >= var.time.soak_extra
						else var.time.update({'soak_extra': var.time.soak_extra - user.print_start.ival}) %}}
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION={next_duration}
		{% else %}
			{% set text = 'extra heat soak timed out' if var.time.soak_extra == 0 else 'chamber temp reached' %}
			_PRINT_AR T="{
				"Chamber temp: act %2.1f&degC min %2.1f&degC (target(%2.1f&degC) - delta(%2.1f&degC)) %s" % 
				(actChamber, targetChamber, var.temp.chamber, var.delta.chamber, text)}"
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Final"'
			UPDATE_DELAYED_GCODE ID=_START_PRINT_WAIT DURATION=0.5
		{% endif %}
		SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=var VALUE="{var}"
	##############################  all whats need to run at the end  ##############################
	{% elif state == 'Final' %}
		RESUME_BASE
		SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"' 		; set state for next print    
		{% if user.hw.display.enabled %}
			_LCD_KNOB COLOR=RED														; red light on
		{% endif %}
		M106 S0                                                               		; turn off part cooling fan
		G34                                                                   		; home & QGL
		{% if user.hw.chamber.fan %}
			M141 S{var.temp.chamber}     											; set target temp for exhaust fan
		{% endif %}
		NOZZLE_CLEAN
		SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=calibrate_z_next VALUE={user.hw.auto_z_offset.auto}
		G28 Z
		{% if user.hw.auto_z_offset.auto %}
			CALIBRATE_Z
		{% endif %}
		{% if user.hw.auto_z_offset.manu %}
			_SET_PLATE_OFFSET
		{% endif %}
		SET_GCODE_OFFSET Z_ADJUST={var.z_adjust} MOVE=1
		_PRINT_OFFSET
		PRIME_LINE PRIME_HEIGHT={var.prime_height}
		{% if user.hw.endstop_temp.enabled %}
			{% set _dummy = var.temp.update({'endstop': printer['temperature_sensor endstop'].temperature}) %}
			SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=var VALUE="{var}"
		{% endif %}
		G21                                                 						; set units to millimeters
		G90                                                 						; use absolute coordinates
		M83                                                 						; use relative distances for extrusion
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	{% endif %}