# Usage:
# G27 [P<0|1|2>]
#     P0: If current Z-pos is lower than Z-park then the nozzle will be raised to reach Z-park height
#     P1: No matter the current Z-pos, the nozzle will be raised/lowered to reach Z-park height
#     P2: The nozzle height will be raised by Z-park amount but never going over the machineâ€™s limit of Z_MAX_POS
[gcode_macro G27]
description: Park toolhead (Klipper compatible G-code)
gcode:
    # Setup defaults
    {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
    {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
    {% set default_z = printer.toolhead.axis_minimum.z + 20 %}
    {% set default_z_raise = 20 %}
    {% set default_p = -1 %}
    {% set tool = printer.toolhead %}

    # Load saved values if present
    {% if 'save_variables' in printer %}    
        {% set svv = printer.save_variables.variables %}
        {% if 'park_x' in svv %}
            {% set default_x = svv.park_x %}
        {% endif %}
        {% if 'park_y' in svv %}
            {% set default_y = svv.park_y %}
        {% endif %}
        {% if 'park_z' in svv %}
            {% set default_z = svv.park_z %}
        {% endif %}
        {% if 'park_z_raise_ammount' in svv %}
            {% set default_z_raise = svv.park_z_raise_ammount %}
        {% endif %}
    {% endif %}

    # Set XY values
    {% set x = default_x %}
    {% set y = default_y %}

    # Determine P and calculate Z height
    {% if not params.P %}                                               # called without P parameter
        {% set z = tool.position.z + default_z_raise %}                 # Z position with raise ammount
        {% if tool.axis_maximum.z < z %}                                # check if Z is over maximum possible Z
            {% set z = tool.axis_maximum.z %}                           # cap Z to max possible Z
        {% endif %}
    {% else %}                                                          # called with P parameter
        {% set p = params.P|default(default_p)|int %}
        {% if p == -1 %}
            {% set z = tool.position.z + default_z_raise %}             # Z position with raise ammount
            {% if tool.axis_maximum.z < z %}                            # check if Z is over maximum possible Z
                {% set z = tool.axis_maximum.z %}                       # cap Z to max possible Z
            {% endif %}
        {% elif p == 0 %}                                               # raise Z to park Z height
            {% if tool.position.z < default_z %}
                {% set z = default_z %}
            {% endif %}
        {% elif p == 1 %}                                               # no matter what possition Z is, set it to park Z
            {% set z = default_z %}
        {% elif p == 2 %}                                               # try to raise by park Z raise ammount
            {% set z = tool.position.z + default_z_raise %}
            {% if tool.axis_maximum.z < z %}                            # check if Z is over maximum possible Z
                {% set z = tool.axis_maximum.z %}                       # cap Z to max possible Z
            {% endif %}
        {% else %}                                                      # error on unknown P value
            {action_raise_error("Unknown P parameter. Valid values are: 0|1|2")}
        {% endif %}    
    {% endif %}

    {% if printer.toolhead.homed_axes != "xyz" %}
        {action_respond_info("Please home XYZ first")}
    {% else %}
        SAVE_GCODE_STATE NAME=G27_state
        G90                                         # absolute positioning
        G1 Z{z} F3000                               # Z to calculated value
        G1 X{x} Y{y} F3000                          # move XY to park position
        RESTORE_GCODE_STATE NAME=G27_state MOVE=0
    {% endif %}

